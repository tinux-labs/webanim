---
import { getCollection } from 'astro:content';
import Card from '~/components/Card.astro';
import Container from '~/components/Container.astro';
import BaseLayout from '~/layouts/BaseLayout.astro';


export async function getStaticPaths() {
  const allDemos = await getCollection("demos")
  const categories = [...new Set(allDemos.map(demo => demo.data.category.toLowerCase()))]

  return categories.map(category => ({
    params: { 
      category
    },
    props: {
      allDemos
    }
  }))
}

const { category } = Astro.params
const { allDemos } = Astro.props

if (!category) {
  throw new Response("Not found", {status: 404})
}

const demos = allDemos.filter(
  demo => demo.data.category.toLowerCase() === category.toLocaleLowerCase())
  .sort((a, b) => new Date(b.data.date ?? 0).getTime() - new Date(a.data.date ?? 0).getTime())

const availableTags = [...new Set(
  demos.flatMap(demo => demo.data.tags || [])
)].sort()

function toTitleCase(str: string): string {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
---
<BaseLayout>
  <Container>
    <div class="flex flex-col gap-32 pt-24">
      <div class="flex flex-col items-center text-center">
        <h1 class="font-display text-[56px]">{category.toUpperCase()} <span class="italic">Animations</span></h1>
        <p class="text-fg-muted max-w-80">
          Fun little web animations made with {category} for smooth motion.
        </p>
      </div>
      <section class="flex flex-col gap-4">
          <div class="flex w-full justify-end items-center gap-4">
            <button 
            data-tag="all"
            class="tag-filter underline cursor-pointer text-fg-muted hover:text-fg text-sm">All</button>
            {availableTags.map(tag => (
              <button data-tag={tag} class=" tag-filter cursor-pointer text-fg-muted hover:text-fg text-sm">{toTitleCase(tag)}</button>
            ))}
          </div>
          <div class="grid grid-cols-4 gap-4">
            {demos.map(demo => (
              <div
                  data-tags={demo.data.tags?.join(" ") ?? ""}
                  class="card-wrapper"
              >
                <Card 
                  title={demo.data.title} 
                  slug={demo.slug} 
                  colors={demo.data.colors} />
              </div>
            ))}
          </div>
      </section>
    </div>
  </Container>
</BaseLayout>

<script>
  document.addEventListener("astro:page-load", () => {
    const buttons = document.querySelectorAll<HTMLButtonElement>(".tag-filter")
    const cards = document.querySelectorAll<HTMLElement>(".card-wrapper")

    buttons.forEach(btn => {
      btn.addEventListener("click", () => {
        const selectedTag = btn.dataset.tag || "all"

        cards.forEach(card => {
          const cardTags = card.dataset.tags?.split(" ")
          const shouldShow = selectedTag === "all" || cardTags?.includes(selectedTag)
          card.style.display = shouldShow ? "block" : "none"
          
        })

        buttons.forEach(b => b.classList.remove("underline"))
        btn.classList.add("underline")
      })
    })
  })
</script>