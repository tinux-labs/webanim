---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Card from '~/components/Card.astro';
import Container from '~/components/Container.astro';

const allDemos = await getCollection("demos")

const grouped = allDemos.reduce((acc, demo) => {
  const category = demo.data.category;
  if (!acc[category]) acc[category] = [];
  acc[category].push(demo);
  return acc;
}, {} as Record<string, typeof allDemos>);

for (const category in grouped) {
  grouped[category] = grouped[category]
    .sort((a, b) => {
      const dateA = new Date(a.data.date ?? 0);
      const dateB = new Date(b.data.date ?? 0);
      return dateB.getTime() - dateA.getTime();
    })
    .slice(0, 4);
}
---

<BaseLayout>
	 <Container>
		<h1 class="font-display">Web <span class="italic">Animations</span></h1>
		<p class="text-fg-muted">
			Simple web animation examples to learn and explore popular libraries.
		</p>
		{Object.entries(grouped).map(([category, demos]) => (
			<section>
				<div class="flex w-full justify-between items-center">
					<h2>{category.toUpperCase()}</h2>
					<a href={`/${category}`} class="text-sm text-fg-muted">View all</a>
				</div>
				<div class="grid grid-cols-4 gap-4">
					{demos.map(demo => (
						<Card title={demo.data.title} slug={demo.slug} colors={demo.data.colors} />
					))}
				</div>
			</section>
		))}
	 </Container>
</BaseLayout>
